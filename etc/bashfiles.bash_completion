# Search array1 for any element in array2. Stop on first match. -1 on not
# found.
function _cf_match() {
    declare -a array1=("${!1}")
    declare -a array2=("${!2}")

    local i=0
    while [[ $i -lt ${#array1[@]} ]]; do
        local j=0
        while [[ $j -lt ${#array2[@]} ]]; do
            if [[ ${array1[i]} == ${array2[j]} ]]; then
                echo $i
                return
            fi
            let j++
        done
        let i++
    done

    echo '-1'
}


function _cf_completer() {
    COMPREPLY=()

    local OPTIONS=(-f -h -o -q -s -t -v)
    local COMMANDS=(cp get ls mkdir mv put rm rmdir stat)

    local opts=
    local cur="${COMP_WORDS[COMP_CWORD]}"
    local cmd_idx=`_cf_match COMP_WORDS[@] COMMANDS[@]`
    local cmd=COMP_WORDS[cmd_idx]}
    local container_idx=`expr $cmd_idx + 1`

    local COMPLETION_DIR=~/.bashfiles-completion
    local container_fname=$COMPLETION_DIR/container-names
    local object_fname=$COMPLETION_DIR/${COMP_WORDS[container_idx]}-object-names

    if [[ $cmd_idx -eq -1 && ${cur:0:1} == '-' ]]; then
        # Option (no command yet, starts with -)
        opts="${OPTIONS[@]}"
    elif [[ $cmd_idx -eq -1 ]]; then
        # Command (no command yet, anything else)
        opts="${COMMANDS[@]}"
    elif [[ $COMP_CWORD -eq $container_idx && -r $container_fname ]]; then
        # Containers (after command)
        opts=`cat $container_fname | tr '\n' ' '`
    elif [[ $cmd == 'put' ]]; then
        # put completes to filenames not object-names
        COMPREPLY=($(compgen -f $cur))
        return
    elif [[ $cmd == 'ls' ]]; then
        # ls doesn't complete to object-names
        return
    elif [[ -r $object_fname ]]; then
        # Everything else completes to a list of object-names
        opts=`cat $object_fname | tr '\n' ' '`
    fi

    COMPREPLY=($(compgen -W "$opts" -- $cur))
}


complete -F _cf_completer bashfiles
